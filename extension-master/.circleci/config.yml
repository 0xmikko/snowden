version: 2

defaults:
  workspace_root: &workspace_root
    ~/extension

  nodejs_container: &nodejs_container
    working_directory: *workspace_root
    docker:
      - image: circleci/node:10-stretch

  golang_container: &golang_container
    working_directory: *workspace_root
    docker:
      - image: circleci/golang:1-stretch

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v2-armateam-extension-node-{{ checksum "yarn.lock" }}
        - v2-armateam-extension-node-

jobs:
  checkout:
    <<: *nodejs_container
    steps:
      - checkout

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  install:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore yarn cache
          keys:
            - v2-armateam-extension-yarn-{{ checksum "yarn.lock" }}
            - v2-armateam-extension-yarn-

      - run:
          name: Install dependencies
          command: yarn

      - save_cache:
          name: Save yarn cache
          key: v2-armateam-extension-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn/

      - save_cache:
          name: Save node_modules cache
          key: v2-armateam-extension-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

  lint:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Lint JavaScript
          command: yarn xo

  build:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Build output bundles
          command: yarn build

      - store_artifacts:
          name: Store dist bundles
          path: extension/

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - extension/

  package:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Package extension
          command: yarn deploy

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - web-ext-artifacts/

  changelog:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore changelog cache
          keys:
            - v1-armateam-extension-changelog-{{ .BuildNum }}
            - v1-armateam-extension-changelog-

      - run:
          name: Generate changelog
          command: |
            if [ $CIRCLE_TAG ]; then
              PREV_TAG=$(git describe --abbrev=0 --tags $CIRCLE_TAG^)

              echo "[+] Running for range $PREV_TAG...$CIRCLE_TAG"

              node_modules/.bin/lerna-changelog --tag-from $PREV_TAG --tag-to $CIRCLE_TAG > CHANGELOG.md
            else
              PREV_TAG=$(git describe --abbrev=0 --tags)

              echo "[+] Running from $PREV_TAG"

              node_modules/.bin/lerna-changelog --tag-from $PREV_TAG > CHANGELOG.md
            fi

      - save_cache:
          name: Save changelog cache
          key: v1-armateam-extension-changelog-{{ .BuildNum }}
          paths:
            - .changelog/

      - run:
          name: Display changelog
          command: cat CHANGELOG.md

      - persist_to_workspace:
          name: Persist changelog
          root: *workspace_root
          paths:
            - CHANGELOG.md

  deploy:
    <<: *golang_container
    steps:
      - *attach_workspace

      - run:
          name: Install github-release
          command: go get github.com/aktau/github-release

      - deploy:
          name: Create GitHub release
          command: |
            github-release release --user $CIRCLE_PROJECT_USERNAME \
                                   --repo $CIRCLE_PROJECT_REPONAME \
                                   --tag $CIRCLE_TAG \
                                   --description "$(cat CHANGELOG.md)" \
                                   --name $CIRCLE_TAG

      - deploy:
          name: Upload package to GitHub release
          command: |
            ARTIFACT_NAME=$(ls web-ext-artifacts)
            github-release upload --user $CIRCLE_PROJECT_USERNAME \
                                  --repo $CIRCLE_PROJECT_REPONAME \
                                  --tag $CIRCLE_TAG \
                                  --name $ARTIFACT_NAME \
                                  --file web-ext-artifacts/$ARTIFACT_NAME

workflows:
  version: 2

  push:
    jobs:
      - checkout:
          filters: *default_filters

      - install:
          requires:
            - checkout
          filters: *default_filters

      - lint:
          requires:
            - install
          filters: *default_filters

      - build:
          requires:
            - install
          filters: *default_filters

      - changelog:
          requires:
            - install
          filters: *default_filters

      - package:
          requires:
            - build
          filters: *default_filters

      - deploy:
          requires:
            - lint
            - package
            - changelog
          filters:
            <<: *default_filters
            branches:
              ignore: '/.*/'
