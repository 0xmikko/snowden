{"version":3,"sources":["popup/config.js","popup/components/Forms/FormikForm.js","popup/containers/Translate/TranslateForm.js","popup/components/AppBar/AppBar.js","popup/containers/App.js","popup/utils/updateState.js","popup/reducers/search.js","popup/actions/actions.js","popup/reducers/dataLoader.js","popup/reducers/forms.js","popup/reducers/typeAhead.js","popup/index.js","popup/store.js","popup/reducers/index.js"],"names":["STATUS_ACTIVE","STATUS_LOADING","InputField","props","react_default","a","createElement","Form","Group","as","Col","md","sm","Label","title","Control","type","name","value","values","onChange","handleChange","isInvalid","errors","Feedback","CheckBoxField","Check","Object","assign","label","checked","setFieldValue","FormikForm","state","status","hashSent","onSubmit","console","log","_this","resource","id","Date","setState","updateDetail","api","prevProps","prevState","snapshot","hash","this","undefined","hashUpdates","_this2","updateData","Redirect","to","onSuccessLink","schemaPrep","entries","fieldList","map","x","validation","schema","yup","objectSpread","submitButtonLabel","dist","validationSchema","initialValues","render","fields","field","key","inputProps","FormikForm_InputField","FormikForm_CheckBoxField","noValidate","handleSubmit","Row","Button","Component","connect","dispatch","DealForm","fieldsList","source","Yup","required","Container","fluid","style","paddingLeft","paddingRight","marginTop","Forms_FormikForm","data","AppBar","menu","Navbar","Collapse","Nav","className","Item","bsPrefix","width","Link","backgroundColor","textColor","A","B","App","Fragment","components_AppBar_AppBar","Switch","Route","path","component","Translate","updateState","oldState","newValues","initialState","isLoading","options","search","arguments","length","action","payload","lists","details","updates","dataLoader","hashUpdate","obj","meta","results","dataById","item","prevQuery","query","newQuery","count","previous","next","now","searchUpdate","forms","reducers_forms","updateForms","formId","show","typeAhead","__webpack_require__","d","__webpack_exports__","src_popup_store","history","createHistory","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","persistReducer","storage","combineReducers","router","connectRouter","rootReducer","createStore","applyMiddleware","routerMiddleware","thunk","persistStore","configureStore","ReactDOM","es","esm","popup_containers_App","document","getElementById"],"mappings":"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","file":"static/js/index.c0b7b5d9.chunk.js","sourcesContent":["export const BACKEND_ADDR = 'http://localhost:8000';\n\n\nexport const STATUS_UPDATE_NEEDED  = '@@status/UPDATE_NEEDED'\n\nexport const STATUS_ACTIVE  = '@@status/ACTIVE'\nexport const STATUS_LOADING = '@@status/LOADING'\nexport const STATUS_UPDATING = '@@status/UPDATING'\nexport const STATUS_SUCCESS = '@@status/SUCCESS'\nexport const STATUS_FAILURE = '@@status/FAILURE'\n\n","import React, { Component } from \"react\";\nimport { Formik, Field } from 'formik/dist/index';\nimport * as yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n//import {getHashUpdates} from \"../../reducers\";\n//import * as actions from \"../../actions/dataLoader\";\nimport {connect} from \"react-redux\";\nimport * as status from \"../../config\";\nimport {Redirect} from \"react-router\";\n//import TypeAhead from './TypeAhead'\n\n\nconst InputField = (props) => (\n    <Form.Group as={Col} md={props.sm}>\n        <Form.Label>{ props.title }</Form.Label>\n            <Form.Control\n                as = { props.as }\n                type = { props.type }\n                name = { props.name }\n                value = {props.values[props.name]}\n                onChange = {props.handleChange}\n                isInvalid = {!!props.errors[props.name]}\n              />\n        <Form.Control.Feedback type=\"invalid\">\n          { props.errors[props.name]}\n        </Form.Control.Feedback>\n    </Form.Group>\n\n)\n\nconst CheckBoxField = (props) => {\n    return <Form.Group as={Col} md={props.sm}>\n        <Form.Label>&nbsp;</Form.Label>\n        <Form.Check\n            label={props.title}\n            {...props}\n            checked={props.values[props.name]}\n            onChange={() => props.setFieldValue(props.name, !props.values[props.name])}\n        />\n    </Form.Group>\n};\n\n/*\nconst SelectTypeAhead = (props) => {\n    return  <Form.Group as={Col} md={props.sm}>\n        <Form.Label>{ props.title }</Form.Label>\n            <TypeAhead resource={props.resource} api={props.api} {...props}/>\n    </Form.Group>\n}\n*/\n\nclass FormikForm extends Component {\n\n    state = {\n        status: status.STATUS_ACTIVE,\n        hashSent: 0\n    }\n\n    onSubmit = (values) => {\n\n        console.log(\"FFF-FORM\", values)\n\n        const hashSent = 'ForMIK' +  this.props.resource + this.props.id + Date();\n        this.setState({status: status.STATUS_LOADING, hashSent: hashSent})\n        this.props.updateDetail(this.props.api, this.props.resource, this.props.id, values, hashSent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const hash = this.state.hashSent;\n        if (hash === 0) return;\n        if ((this.props.hashUpdates[hash] !== undefined) && (this.state.status === status.STATUS_LOADING)) {\n            this.setState({status: status.STATUS_SUCCESS, hashSent: 0})\n        }\n\n    }\n\n\n\n    render() {\n\n        if (this.state.status === status.STATUS_SUCCESS) {\n            if (this.updateData) { this.updateData(); }\n            else return <Redirect to={this.props.onSuccessLink}/>\n        }\n\n        const schemaPrep = {};\n        Object.entries(this.props.fieldList).map(x => schemaPrep[x[0]] = x[1].validation);\n\n        const schema = yup.object({...schemaPrep})\n        let submitButtonLabel = \"Save\"\n        if (this.props.submitButtonLabel !== undefined) submitButtonLabel = this.props.submitButtonLabel;\n        return (\n            <Formik\n              validationSchema = {schema}\n              onSubmit = { this.onSubmit }\n              initialValues = {{ ...this.props.initialValues }}\n\n              render={ props => {\n                  const fields = Object.entries(this.props.fieldList).map(field => {\n                       const key = field[0];\n                       const value = field[1];\n                       const type = field[1].type || \"text\";\n                       const inputProps = {\n                           name: key,\n                           type: type,\n                           title: value.title,\n                           sm: value.sm || 12,\n                           key,\n                           ...props,\n                           ...field[1]\n                       }\n\n                       switch(type){\n                           case 'text':\n                           case 'password':\n\n                               return <InputField {...inputProps } />\n\n                           case 'select':\n                               return <InputField {...inputProps } />\n\n\n                           case 'textarea':\n                               return <InputField {...inputProps } as={'textarea'}/>\n\n                           //case 'autocomplete':\n                           //    return <SelectTypeAhead {...inputProps}/>\n\n                           case 'checkbox':\n                               return <CheckBoxField {...inputProps}/>\n\n                       }\n\n                      });\n\n                  return <Form noValidate onSubmit={props.handleSubmit}>\n                      <Form.Row>\n                          { fields }\n                      </Form.Row>\n                      <Button type=\"submit\">{submitButtonLabel}</Button>\n                  </Form>\n              }\n              }\n            />\n\n    );\n        }\n\n\n\n};\n\nconst mapStateToProps = (state) => ({\n    //hashUpdates:          getHashUpdates(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n      //updateDetail:      (api, resource, id, file, hashSent) => dispatch(actions.updateDataLoaderDetail(api, resource, id, file, hashSent)),\n\n});\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(FormikForm)\n\n","import React, { Component } from \"react\";\nimport * as Yup from 'yup';\nimport {Card, Tab, Nav, Container, Row, Button, Col, ListGroup, Form, InputGroup} from \"react-bootstrap\";\n\n//import PageHeader from \"../../components/PageHeader\";\n//import DetailDataLoaderWrapper from \"../../components/DataLoaders/DataLoaderDetail\";\nimport FormikForm from \"../../components/Forms/FormikForm\"\n\n\nclass DealForm extends Component {\n\n    render() {\n\n         const fieldsList = {\n          source: {\n              title: 'Post to encrypt',\n              sm: 12,\n              type: 'textarea',\n              validation: Yup.string().required('Required')\n          },\n\n        };\n\n        return (\n            <div>\n\n            <Container fluid style={{ paddingLeft: 20, paddingRight: 20, marginTop: 15}}>\n            <h3>Translate</h3>\n\n\n            <FormikForm fieldList = {fieldsList}\n                        onSubmit = {this.onSubmit}\n                        initialValues = {this.props.data}\n                        onSuccessLink = {this.props.onSuccessLink}\n                        {...this.props}\n              />\n        </Container>\n      </div>\n\n    );\n\n    }\n\n};\n\n\nexport default DealForm;\n","import React from \"react\";\nimport {Nav, NavDropdown, Form, Navbar, Container} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n//import \"./AppBar.css\"\n\n\nconst AppBar = (props) => {\n\n    const menu = (\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Item bsPrefix={'nav-link'} style={{width: \"110px\"}}><Link to={\"/translate/\"}>Translate</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'} style={{width: \"110px\"}}><Link to={\"/readers/\"}>Readers</Link></Nav.Item>\n                    <Nav.Item bsPrefix={'nav-link'} style={{width: \"110px\"}}><Link to={\"/settings/\"}>Settings</Link></Nav.Item>\n                </Nav>\n\n              </Navbar.Collapse>\n    ) ;\n\n    return (\n        <Container fluid style={{backgroundColor: \"#F0F0FF\", paddingLeft: 20, paddingRight:40}}>\n            <Navbar style={{textColor: \"#000000\", paddingLeft: 20, paddingRight:40, }}>\n\n                { menu }\n\n            </Navbar>\n        </Container>\n            )\n\n}\n\n\nexport default AppBar;\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport { Container } from \"react-bootstrap\";\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'\n\nimport Translate from \"./Translate/TranslateForm\"\n\nimport './App.css';\nimport AppBar from \"../components/AppBar/AppBar\";\n\n\nconst A = (props) => (\"HELLO\");\nconst B = (props) => (\"ODD\");\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n\n        <AppBar {...this.props}/>\n\n        <Switch>\n            <Route path=\"/translate/\"  component={Translate}/>\n            <Route path=\"/readers/\" component={B}/>\n            <Route path=\"/settings/\" component={A}/>\n            <Route path='*' component={B}/>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// Updating state immutable\n\n//import {error, success} from \"react-notification-system-redux\";\n\nexport const updateState = (oldState, newValues) =>\n    (\n        {\n            ...oldState,\n            ...newValues\n        }\n    )\n\n\n/*\nexport const notifyError = (message) =>\n{\n   return error({\n                    title: \"Internal error\",\n                    message: message,\n                    position: 'tr',\n                    action: {\n                        label: 'Got it!'\n                    }\n                })\n}\n*/\n","import { updateState } from \"../utils/updateState\";\nimport * as auth from '../actions/actions'\n\n\nconst initialState = {\n  isLoading: false,\n  options: []\n}\n\nexport default (state=initialState, action) => {\n\n  console.log(\"SEARCH\", action)\n\n  switch (action.type) {\n    case auth.SEARCH_QUERY_REQUEST:\n      return updateState(state, {\n        ...state,\n        isLoading: true\n      })\n\n    case auth.SEARCH_QUERY_SUCCESS:\n      return updateState(state, {\n        ...state,\n        isLoading: false,\n        options: action.payload.options\n      })\n\n    case auth.LOGIN_FAILURE:\n\n      return {\n        ...state,\n        isLoading: false,\n        options: [],\n      }\n\n    default:\n      return state\n\n  }\n}\n\nexport const getSearchItems = (state) => (state);\n","export const LOGIN_REQUEST = '@@jwt/LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = '@@jwt/LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = '@@jwt/LOGIN_FAILURE';\n\nexport const LOGOUT        = '@@jwt/LOGOUT';\n\nexport const SIGNUP_REQUEST = '@@jwt/SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = '@@jwt/SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = '@@jwt/SIGNUP_FAILURE';\n\nexport const TOKEN_REQUEST  = '@@jwt/TOKEN_REQUEST';\nexport const TOKEN_RECEIVED = '@@jwt/TOKEN_RECEIVED';\nexport const TOKEN_FAILURE  = '@@jwt/TOKEN_FAILURE';\n\n// ----- SEARCH ----------\n\nexport const SEARCH_QUERY_REQUEST = 'SEARCH/QUERY_REQUEST';\nexport const SEARCH_QUERY_SUCCESS = 'SEARCH/QUERY_SUCCESS';\nexport const SEARCH_QUERY_FAILURE = 'SEARCH/QUERY_FAILURE';\n\n// ------ DATA_LOADER ----------\n\nexport const DATA_LOADER_LIST_REQUEST = '@@DATA_LOADER/LIST_REQUEST';\nexport const DATA_LOADER_LIST_UPDATE_REQUEST = '@@DATA_LOADER/UPDATE_LIST_REQUEST';\nexport const DATA_LOADER_LIST_SUCCESS = '@@DATA_LOADER/LIST_SUCCESS';\nexport const DATA_LOADER_LIST_FAILURE = '@@DATA_LOADER/LIST_FAILURE';\n\n\nexport const DATA_LOADER_DETAIL_REQUEST = '@@DATA_LOADER/DETAIL_REQUEST';\nexport const DATA_LOADER_DETAIL_UPDATE = '@@DATA_LOADER/DETAIL_UPDATE';\nexport const DATA_LOADER_DETAIL_SUCCESS = '@@DATA_LOADER/DETAIL_SUCCESS';\nexport const DATA_LOADER_DETAIL_FAILURE = '@@DATA_LOADER/DETAIL_FAILURE';\n\nexport const DATA_LOADER_UPLOAD_REQUEST = '@@DATA_LOADER/UPLOAD_REQUEST';\nexport const DATA_LOADER_UPLOAD_SUCCESS = '@@DATA_LOADER/UPLOAD_SUCCESS';\nexport const DATA_LOADER_UPLOAD_FAILURE = '@@DATA_LOADER/UPLOAD_FAILURE';\n\nexport const DATA_LOADER_DELETE_REQUEST = '@@DATA_LOADER/DELETE_REQUEST';\nexport const DATA_LOADER_DELETE_SUCCESS = '@@DATA_LOADER/DELETE_SUCCESS';\nexport const DATA_LOADER_DELETE_FAILURE = '@@DATA_LOADER/DELETE_FAILURE';\n\nexport const TYPEAHEAD_LIST_REQUEST = '@@TYPEAHEAD/LIST_REQUEST';\nexport const TYPEAHEAD_LIST_UPDATE_REQUEST = '@@TYPEAHEAD/UPDATE_LIST_REQUEST';\nexport const TYPEAHEAD_LIST_SUCCESS = '@@TYPEAHEAD/LIST_SUCCESS';\nexport const TYPEAHEAD_LIST_FAILURE = '@@TYPEAHEAD/LIST_FAILURE';\n\nexport const SEARCH_COMPONENT = \"@@SEARCH/COMPONENT\";\n\n// BUDGETS\nexport const BUDGETS_MAKE_FINANCES = \"@@BUDGETS/MAKE_FINANCES\";\n\n// FINANCES\nexport const FINANCES_CLEAR_ALL = \"@@FINANCES/CLEAR_ALL\";\n\n// FORMS\n\nexport const FORMS_SHOW = \"@@FORMS/SHOW\";\nexport const FORMS_HIDE = \"@@FORMS/HIDE\";\n\n\n\n\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions';\nimport * as status from '../config';\n\n\nconst initialState = {\n  lists: {},\n  details: {},\n  updates: {},\n  search: {}\n};\n\n\nexport default (state=initialState, action) => {\n\n  const obj = {};\n  let hash, hashUpdate;\n\n  switch (action.type) {\n\n      case actions.DATA_LOADER_LIST_REQUEST:\n         obj[action.meta.resource] = {\n             status: status.STATUS_LOADING,\n             data: []\n         }\n\n        return updateState(state, { ...state,\n                        lists: updateState(state.lists, obj) });\n\n      case actions.DATA_LOADER_LIST_UPDATE_REQUEST:\n         obj[action.meta.resource] = {\n             ...state.lists[action.meta.resource],\n             status: status.STATUS_UPDATING,\n         }\n\n        return updateState(state, { ...state, lists: {...obj} });\n\n      case actions.DATA_LOADER_LIST_SUCCESS:\n\n          let data = (action.payload.results !== undefined) ? action.payload.results : action.payload;\n\n          const dataById = []\n          data.map(item => dataById[item.id] = item)\n\n          const prevQuery = state.lists[action.meta.resource].query;\n          const newQuery = action.meta.query;\n          console.log(\"QQQ1\",  action.meta);\n          console.log(\"QQQ1\", prevQuery);\n          console.log(\"QQQ2\", newQuery);\n\n          let updateData = (newQuery === prevQuery)? state.lists[action.meta.resource].data : undefined;\n\n          obj[action.meta.resource] = {\n                  status: status.STATUS_SUCCESS,\n                  data: {\n                    ...updateData,\n                    ...dataById\n                  },\n                  count: action.payload.count,\n                  previous: action.payload.previous,\n                  next: action.payload.next,\n                  query: newQuery\n              }\n\n          return updateState(state, { ...state,\n              lists: updateState(state.lists, obj) });\n\n    case actions.DATA_LOADER_LIST_FAILURE:\n          obj[action.meta.resource] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state,\n              lists: updateState(state.lists, obj) });\n\n\n    /*\n                                 DETAIL REQUESTS\n        =====================================================================\n    */\n\n\n    case actions.DATA_LOADER_DETAIL_REQUEST:\n\n          obj[action.meta.resource] = state.details[action.meta.resource] || {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_LOADING,\n          }\n\n        return updateState(state, { ...state,\n                            details: updateState(state.details, obj)});\n\n    case actions.DATA_LOADER_DETAIL_SUCCESS:\n\n          console.log(\"DETAILS\", state.details)\n          // We add an info of update for current hash\n          hash = action.meta.hash || 0;\n          hashUpdate = {};\n          hashUpdate[hash] = +Date.now();\n\n          obj[action.meta.resource] = state.details[action.meta.resource] || {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_SUCCESS,\n              data: action.payload,\n          }\n          return updateState(state,\n                { ...state,\n                            details: updateState(state.details, obj),\n                            updates: updateState(state.updates, hashUpdate)});\n\n    case actions.DATA_LOADER_DETAIL_FAILURE:\n          obj[action.meta.resource] = {};\n          obj[action.meta.resource][action.meta.id] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state, details: {...obj} });\n\n\n    // DELETE OPERATIONS\n\n    case actions.DATA_LOADER_DELETE_SUCCESS:\n        hash = action.meta.hash || 0;\n        hashUpdate = {};\n        hashUpdate[hash] = +Date.now();\n\n        // Remove resource + id from list\n        obj[action.meta.resource] = state.lists[action.meta.resource];\n        console.log(\"DELETE\", action.meta.resource)\n        console.log(\"DELETE\", obj)\n        if (obj[action.meta.resource]) {\n            data = obj[action.meta.resource].data\n            if (data[action.meta.id]) delete data[action.meta.id]\n        }\n\n        console.log(\"DELETE\", obj)\n\n        return updateState(state,\n            { ...state,\n                        lists: updateState(state.lists, obj),\n                        updates: updateState(state.updates, hashUpdate)});\n\n    case actions.SEARCH_COMPONENT:\n        if (!action.resource) throw \"No resource for search were sent\";\n        const searchUpdate = {};\n        searchUpdate[action.resource] = action.query;\n\n        return updateState(state,\n            { ...state,\n                        search: updateState(state.updates, searchUpdate)});\n\n\n    default:\n          return state;\n\n  }\n}\n\nexport const getDataList    = (state) => (state.lists);\nexport const getDataDetails = (state) => (state.details);\nexport const getHashUpdates = (state) => (state.updates);\nexport const getComponentSearch = (state) => (state.search);\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions'\n\n\nconst initialState = {\n  forms: {},\n};\n\n\nexport default (state=initialState, action) => {\n\n  let updateForms = state.forms;\n  console.log(\"STATE\", state);\n\n  switch (action.type) {\n\n      case actions.FORMS_SHOW:\n\n\n          updateForms[action.formId] = {\n              show: true,\n              data: action.data\n          };\n\n          return updateState(state, {\n            ...state,\n            forms: updateState(state.forms, updateForms)\n          });\n\n      case actions.FORMS_HIDE:\n\n          const data = (state.forms['formId']) ? state.forms['formId'].data: undefined;\n\n          updateForms[action.formId] = {\n              show: false,\n              data: data\n          };\n\n          return updateState(state, {\n            ...state,\n            forms: updateState(state.forms, updateForms)\n          });\n\n\n      default:\n        return state\n\n  }\n}\n\nexport const getShowForms = (state) => (state.forms);\n","import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions';\nimport * as status from '../config';\n\n\nconst initialState = {\n  lists: {},\n  updates: {}\n};\n\n\nexport default (state=initialState, action) => {\n\n  const obj = {};\n  let hash, hashUpdate;\n\n  switch (action.type) {\n\n      case actions.TYPEAHEAD_LIST_REQUEST:\n         obj[action.meta.resource] = {\n             status: status.STATUS_LOADING,\n             data: []\n         }\n\n        return updateState(state, { ...state, lists: {...obj} });\n\n      case actions.TYPEAHEAD_LIST_SUCCESS:\n\n          let data = (action.payload.results !== undefined) ? action.payload.results : action.payload;\n\n          const dataById = []\n          //data.map(item => dataById[item.id] = item)\n\n          obj[action.meta.resource] = {\n                  status: status.STATUS_SUCCESS,\n                  data: data,\n              }\n          console.log(\"FFFF2\", obj)\n          return updateState(state, { ...state, lists: {...obj} });\n\n    case actions.TYPEAHEAD_LIST_FAILURE:\n          obj[action.meta.resource] = {\n              status: status.STATUS_FAILURE,\n              data: []\n          }\n          return updateState(state, { ...state,lists: {...obj} });\n\n      default:\n          return state;\n\n  }\n}\n\nexport const getOptionsList    = (state) => (state.lists);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createHistory from 'history/createBrowserHistory'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport { ReactReduxContext } from 'react-redux'\n\nimport App from './containers/App';\nimport configureStore from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nconst history = createHistory();\n\nexport const store = configureStore(history);\n\nReactDOM.render((\n\t\t<Provider store={store}>\n\t      \t<ConnectedRouter history={history}>\n\t        \t\t<App />\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\n  ), document.getElementById('root'));\n","import storage from 'redux-persist/es/storage'\nimport { applyMiddleware, createStore, compose  } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\n\nexport default (history) => {\n\n    // Redux DevTools\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n    const reducer = persistReducer(\n    {\n      key: 'polls',\n      storage: storage,\n    },\n    rootReducer(history)\n    )\n\n    const store = createStore(\n    reducer,\n    {},\n    composeEnhancers(\n        applyMiddleware(\n            routerMiddleware(history),\n            thunk\n        )\n    ));\n\n    persistStore(store)\n\n    return store\n}","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport search, * as fromSearch from './search'\nimport dataLoader, * as fromDataLoader from './dataLoader'\nimport forms, * as fromForms from './forms';\nimport typeAhead, * as fromTypeAhead from './typeAhead'\n\n\nexport default (history) => combineReducers({\n\n    router:  connectRouter(history),\n    search: search,\n    dataLoader: dataLoader,\n    forms: forms,\n    typeAhead: typeAhead\n\n})\n\n// Search\nexport const getSearchItems = state => fromSearch.getSearchItems(state.search);\n\n// DataLoader\nexport const getDataList = state => fromDataLoader.getDataList(state.dataLoader);\nexport const getDataDetails = state => fromDataLoader.getDataDetails(state.dataLoader);\nexport const getHashUpdates = state => fromDataLoader.getHashUpdates(state.dataLoader);\nexport const getComponentSearch = state => fromDataLoader.getComponentSearch(state.dataLoader);\n\n// Forms\nexport const getShowForms = state => fromForms.getShowForms(state.forms);\n\n// TypeAhead\nexport const getOptionsList = state => fromTypeAhead.getOptionsList(state.typeAhead);\n"],"sourceRoot":""}