{"version":3,"sources":["background/index.js"],"names":["chrome","portNative","runtime","connectNative","NutouchRequestHandler","message","console","log","url","tabId","postMessage","onMessage","addListener","lastError","json_message","tokens","access_token","access","refresh_token","refresh","public_reader_json","tabs","sendMessage","parseInt","action","payload","response","handleMessage","onDisconnect","onConnect","portFrom","name","onUpdated","changeInfo","tab"],"mappings":"2EAQA,IAAIA,EAIAC,EAAaD,EAAOE,QAAQC,cADjB,uBA2Cf,SAASC,EAAsBC,GAE3BC,QAAQC,IAAI,0BAA4BF,EAAQG,IAAM,aAAeH,EAAQI,OAC7ER,EAAWS,YAAY,CAACD,MAAOJ,EAAQI,MAAOD,IAAKH,EAAQG,MA1C/DP,EAAWU,UAAUC,YAAY,SAACP,GAC5BL,EAAOE,QAAQW,WACjBP,QAAQC,IAAIP,EAAOE,QAAQW,UAAUR,SAazC,SAAwBS,GAEpB,IAAIC,EAAS,CACTC,aAAcF,EAAaG,OAC3BC,cAAeJ,EAAaK,QAC5BC,mBAAoBN,EAAaM,oBAGrCd,QAAQC,IAAI,gBAAkBO,EAAaG,OAC/B,iBAAmBH,EAAaK,QAChC,WAAaL,EAAaL,MAC1B,yBAA2BK,EAAaM,oBAEpDpB,EAAOqB,KAAKC,YAAYC,SAAST,EAAaL,OAAQ,CAACe,OAAQ,cAAeC,QAASV,GAAS,SAASW,MAxB3GC,CAActB,KAGhBJ,EAAW2B,aAAahB,YAAY,WAC9BZ,EAAOE,QAAQW,WACjBP,QAAQC,IAAIP,EAAOE,QAAQW,UAAUR,SAEvCC,QAAQC,IAAI,kBAmCdP,EAAOE,QAAQ2B,UAAUjB,YAAY,SAASkB,GACtB,oBAAlBA,EAASC,MAETD,EAASnB,UAAUC,YAAYR,KAQrCJ,EAAOqB,KAAKW,UAAUpB,YAAY,SAASH,EAAOwB,EAAYC,GAC3D5B,QAAQC,IAAI,mBAAqBE,GACjCT,EAAOqB,KAAKC,YAAYb,EAAO,CAACe,OAAQ,cAAeC,QAAShB,GAAQ,SAASiB","file":"static/js/background.21208dc6.chunk.js","sourcesContent":["/** NuTouch authentication system\n *  Version: 0.1\n *  Author: Mikhail Lazarev (c) All rights reserved\n *\n *  based on NyCypher technology (nucypher.com)\n *\n*/\n\nvar chrome;\n\n// Setting up Native Messaging Connect\nvar hostName = \"com.nutouch.connect\";\nvar portNative = chrome.runtime.connectNative(hostName)\n\n\nportNative.onMessage.addListener((message) => {\n  if (chrome.runtime.lastError) {\n    console.log(chrome.runtime.lastError.message)\n  }\n  handleMessage(message)\n})\n\nportNative.onDisconnect.addListener(() => {\n  if (chrome.runtime.lastError) {\n    console.log(chrome.runtime.lastError.message)\n  }\n  console.log('Disconnected')\n})\n\n\nfunction handleMessage (json_message) {\n\n    var tokens = {\n        access_token: json_message.access,\n        refresh_token: json_message.refresh,\n        public_reader_json: json_message.public_reader_json\n    }\n\n    console.log('access_token:' + json_message.access,\n                'refresh_token:' + json_message.refresh,\n                '\\ntabId:' + json_message.tabId,\n                '\\npublic_reader_json: ' + json_message.public_reader_json)\n\n    chrome.tabs.sendMessage(parseInt(json_message.tabId), {action: 'AUTH_TOKENS', payload: tokens}, function(response) {});\n  \n}\n\n\n// Setting up Background.js - Content.Js - Page.Js data transfer\n\n/**\n * Gets request with URL which is requested JWT Code and\n * send request to Native Messaging system\n */\nfunction NutouchRequestHandler(message) {\n\n    console.log(\"Request for token from \" + message.url + \" at tabId \" + message.tabId);\n    portNative.postMessage({tabId: message.tabId, url: message.url})\n\n  };\n\nchrome.runtime.onConnect.addListener(function(portFrom) {\n   if(portFrom.name === 'nutouch-content') {\n      //This is how you add listener to a port.\n      portFrom.onMessage.addListener(NutouchRequestHandler);\n   }\n});\n\n/**\n * Send TabId to content.js script to evaluate it there\n */\n\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {\n   console.log(\"Sending TAB_ID: \" + tabId);\n   chrome.tabs.sendMessage(tabId, {action: 'SENT_TAB_ID', payload: tabId}, function(response) {});\n});\n"],"sourceRoot":""}