{"ast":null,"code":"import _objectSpread from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport jwtDecode from 'jwt-decode';\nimport { updateState } from \"../utils/updateState\";\nimport * as auth from '../actions/actions';\nvar initialState = {\n  access: undefined,\n  refresh: undefined,\n  errors: {},\n  signup_success: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case auth.LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        access: _objectSpread({\n          token: action.payload.access\n        }, jwtDecode(action.payload.access)),\n        refresh: _objectSpread({\n          token: action.payload.refresh\n        }, jwtDecode(action.payload.refresh)),\n        profile: undefined,\n        isVerified: undefined,\n        errors: {}\n      });\n\n    case auth.TOKEN_RECEIVED:\n      return updateState(state, _objectSpread({}, state, {\n        access: _objectSpread({\n          token: action.payload.access\n        }, jwtDecode(action.payload.access))\n      }));\n\n    case auth.LOGIN_FAILURE:\n    case auth.TOKEN_FAILURE:\n    case auth.SIGNUP_FAILURE:\n      return _objectSpread({}, state, {\n        access: undefined,\n        refresh: undefined,\n        errors: action.payload.response || {\n          'non_field_errors': action.payload.statusText\n        }\n      });\n\n    case auth.LOGOUT:\n      return _objectSpread({}, state, {\n        access: undefined,\n        refresh: undefined\n      });\n\n    case auth.SIGNUP_SUCCESS:\n      return _objectSpread({}, state, {\n        signup_success: true\n      });\n\n    default:\n      return state;\n  }\n});\nexport function accessToken(state) {\n  if (state.access) {\n    return state.access.token;\n  }\n}\nexport function isAccessTokenExpired(state) {\n  if (state.access && state.access.exp) {\n    return 1000 * state.access.exp - new Date().getTime() < 5000;\n  }\n\n  return true;\n}\nexport function refreshToken(state) {\n  if (state.refresh) {\n    return state.refresh.token;\n  }\n}\nexport function isRefreshTokenExpired(state) {\n  if (state.refresh && state.refresh.exp) {\n    return 1000 * state.refresh.exp - new Date().getTime() < 5000;\n  }\n\n  return true;\n}\nexport function isAuthenticated(state) {\n  return !isRefreshTokenExpired(state);\n}\nexport function errors(state) {\n  return state.errors;\n}\nexport var refreshTime = function refreshTime(state) {\n  return state;\n};\nexport var signupSuccess = function signupSuccess(state) {\n  return state.signup_success;\n};","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/reducers/auth.js"],"names":["jwtDecode","updateState","auth","initialState","access","undefined","refresh","errors","signup_success","state","action","console","log","type","LOGIN_SUCCESS","token","payload","profile","isVerified","TOKEN_RECEIVED","LOGIN_FAILURE","TOKEN_FAILURE","SIGNUP_FAILURE","response","statusText","LOGOUT","SIGNUP_SUCCESS","accessToken","isAccessTokenExpired","exp","Date","getTime","refreshToken","isRefreshTokenExpired","isAuthenticated","refreshTime","signupSuccess"],"mappings":"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","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport { updateState } from \"../utils/updateState\";\nimport * as auth from '../actions/actions'\n\n\nconst initialState = {\n  access: undefined,\n  refresh: undefined,\n  errors: {},\n  signup_success: false\n}\n\nexport default (state=initialState, action) => {\n\n  console.log(action)\n\n  switch(action.type) {\n    case auth.LOGIN_SUCCESS:\n      return {\n        ...state,\n        access: {\n          token: action.payload.access,\n          ...jwtDecode(action.payload.access)\n        },\n        refresh: {\n          token: action.payload.refresh,\n          ...jwtDecode(action.payload.refresh)\n        },\n        profile: undefined,\n        isVerified: undefined,\n        errors: {}\n    }\n    case auth.TOKEN_RECEIVED:\n      return updateState(state, {\n                                    ...state,\n                                    access: {\n                                      token: action.payload.access,\n                                      ...jwtDecode(action.payload.access)\n                                    }\n                                  })\n\n\n    case auth.LOGIN_FAILURE:\n    case auth.TOKEN_FAILURE:\n    case auth.SIGNUP_FAILURE:\n\n      return {\n        ...state,\n         access: undefined,\n         refresh: undefined,\n         errors: action.payload.response || {'non_field_errors': action.payload.statusText},\n      }\n\n    case auth.LOGOUT:\n      return {\n         ...state,\n         access: undefined,\n         refresh: undefined,\n      }\n\n    case auth.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signup_success: true\n\n      }\n    default:\n      return state\n    }\n}\n\nexport function accessToken(state) {\n  if (state.access) {\n    return  state.access.token\n  }\n}\n\nexport function isAccessTokenExpired(state) {\n  if (state.access && state.access.exp) {\n    return 1000 * state.access.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\n\nexport function refreshToken(state) {\n  if (state.refresh) {\n    return  state.refresh.token\n  }\n}\n\nexport function isRefreshTokenExpired(state) {\n  if (state.refresh && state.refresh.exp) {\n    return 1000 * state.refresh.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\n\nexport function isAuthenticated(state) {\n  return !isRefreshTokenExpired(state)\n}\n\nexport function errors(state) {\n  return  state.errors\n}\n\nexport const refreshTime = (state) => state\n\nexport const signupSuccess = (state) => state.signup_success\n"]},"metadata":{},"sourceType":"module"}