{"ast":null,"code":"import _classCallCheck from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mikhail/Coding/snowden/front/src/components/Forms/TypeAhead.js\";\nimport React, { Component } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport PropTypes from \"prop-types\";\nimport { getOptionsList } from \"../../reducers\";\nimport * as actions from \"../../actions/typeAhead\";\nimport { DataLoaderDetails } from \"../DataLoaders/DataLoaderDetail\";\nimport { connect } from \"react-redux\";\nimport * as status from \"../../config\";\n\nvar TypeAheadRedux =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TypeAheadRedux, _Component);\n\n  function TypeAheadRedux() {\n    _classCallCheck(this, TypeAheadRedux);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TypeAheadRedux).apply(this, arguments));\n  }\n\n  _createClass(TypeAheadRedux, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getOptionsList(this.props.api, this.props.resource);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var resource = this.props.resource;\n\n      if (this.props.optionsList === undefined || this.props.optionsList[resource] === undefined || this.props.optionsList[resource].status === status.STATUS_LOADING) {\n        return \"Loading...\";\n      }\n\n      var currentOptionsList = this.props.optionsList[resource];\n\n      if (currentOptionsList.status === status.STATUS_FAILURE) {\n        return \"Ooops! Something went wrong!\";\n      }\n\n      var fieldName = this.props.name;\n      var defaultItem = this.props.values[fieldName];\n      console.log(\"KKKKK\", currentOptionsList.data);\n      return React.createElement(Typeahead, Object.assign({\n        name: fieldName,\n        options: currentOptionsList.data,\n        labelKey: \"value\"\n      }, this.props, {\n        multiple: false,\n        onChange: function onChange(selected) {\n          var value = selected.length > 0 ? selected[0].id : '';\n\n          _this.props.setFieldValue(fieldName, value);\n        },\n        onBlur: function onBlur(e) {\n          return _this.props.setFieldTouched(fieldName, true);\n        },\n        defaultSelected: currentOptionsList.data.filter(function (item) {\n          return item.id === defaultItem;\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TypeAheadRedux;\n}(Component);\n\nTypeAheadRedux.propTypes = {\n  api: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    optionsList: getOptionsList(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getOptionsList: function getOptionsList(api, resource) {\n      return dispatch(actions.geTypeaheadOptionsList(api, resource));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeAheadRedux);","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/components/Forms/TypeAhead.js"],"names":["React","Component","Typeahead","PropTypes","getOptionsList","actions","DataLoaderDetails","connect","status","TypeAheadRedux","props","api","resource","optionsList","undefined","STATUS_LOADING","currentOptionsList","STATUS_FAILURE","fieldName","name","defaultItem","values","console","log","data","selected","value","length","id","setFieldValue","e","setFieldTouched","filter","item","propTypes","string","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","geTypeaheadOptionsList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport PropTypes from \"prop-types\";\nimport {getOptionsList} from \"../../reducers\";\nimport * as actions from \"../../actions/typeAhead\";\nimport {DataLoaderDetails} from \"../DataLoaders/DataLoaderDetail\";\nimport {connect} from \"react-redux\";\nimport * as status from \"../../config\";\n\n\nclass TypeAheadRedux extends Component {\n\n    componentDidMount() {\n        this.props.getOptionsList(this.props.api, this.props.resource)\n\n    }\n\n    render() {\n\n        const resource = this.props.resource;\n\n        if (this.props.optionsList === undefined ||\n            this.props.optionsList[resource] === undefined ||\n            this.props.optionsList[resource].status === status.STATUS_LOADING) {\n            return \"Loading...\";\n        }\n\n        const currentOptionsList = this.props.optionsList[resource];\n\n        if (currentOptionsList.status === status.STATUS_FAILURE) {\n            return \"Ooops! Something went wrong!\";\n        }\n\n        const fieldName = this.props.name;\n        const defaultItem = this.props.values[fieldName];\n\n        console.log(\"KKKKK\", currentOptionsList.data);\n        return <Typeahead\n            name={fieldName}\n            options={ currentOptionsList.data }\n            labelKey={\"value\"}\n            {...this.props}\n            multiple={false}\n            onChange={(selected) => {const value = (selected.length > 0) ? selected[0].id : ''; this.props.setFieldValue(fieldName, value); }}\n            onBlur={ (e) => this.props.setFieldTouched(fieldName, true) }\n            defaultSelected = {currentOptionsList.data.filter(item => item.id === defaultItem)}\n\n        />\n    }\n}\n\nTypeAheadRedux.propTypes = {\n    api: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n}\n\n\nconst mapStateToProps = (state) => ({\n    optionsList:          getOptionsList(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n     getOptionsList:      (api, resource) => dispatch(actions.geTypeaheadOptionsList(api, resource))\n\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeAheadRedux);"]},"metadata":{},"sourceType":"module"}