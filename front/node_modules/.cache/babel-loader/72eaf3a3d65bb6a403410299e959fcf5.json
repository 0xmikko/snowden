{"ast":null,"code":"import _defineProperty from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api';\nimport * as actions from './actions';\nimport { getApiById } from \"../utils/api\";\nexport var getDataLoaderList = function getDataLoaderList(api, resource, params) {\n  var url = getFullAPIAddress(api, params);\n  console.log(\"QQQ5\", params);\n  return _defineProperty({}, RSAA, {\n    endpoint: url,\n    method: 'GET',\n    headers: withAuth({\n      'Content-Type': 'application/json'\n    }),\n    types: [{\n      type: actions.DATA_LOADER_LIST_REQUEST,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_LIST_SUCCESS,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_LIST_FAILURE,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }]\n  });\n};\nexport var updateDataLoaderList = function updateDataLoaderList(api, resource, params) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress(api, params),\n    method: 'GET',\n    headers: withAuth({\n      'Content-Type': 'application/json'\n    }),\n    types: [{\n      type: actions.DATA_LOADER_LIST_UPDATE_REQUEST,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_LIST_SUCCESS,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_LIST_FAILURE,\n      meta: {\n        resource: resource,\n        query: params.query\n      }\n    }]\n  });\n};\nexport var getDataLoaderDetail = function getDataLoaderDetail(api, resource, id, update, params) {\n  //let add_params = (params == undefined) ? \"/\" : \"/\" + params;\n  var updateRequest = update ? actions.DATA_LOADER_DETAIL_UPDATE : actions.DATA_LOADER_DETAIL_REQUEST; //console.log(\"ADD\", add_params)\n\n  return _defineProperty({}, RSAA, {\n    endpoint: getApiById(api, id, params),\n    // add_params),\n    method: 'GET',\n    headers: withAuth({\n      'Content-Type': 'application/json'\n    }),\n    types: [{\n      type: updateRequest,\n      meta: {\n        resource: resource,\n        id: id,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_SUCCESS,\n      meta: {\n        resource: resource,\n        id: id,\n        query: params.query\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_FAILURE,\n      meta: {\n        resource: resource,\n        id: id,\n        query: params.query\n      }\n    }]\n  });\n};\nexport var updateDataLoaderDetail = function updateDataLoaderDetail(api, resource, id, data, hashSent) {\n  var headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  if (hashSent === undefined) hashSent = 0; // If data is not formData we change Content-Type and JSONify our data\n\n  if (!(data instanceof FormData)) {\n    headers = {\n      'Content-Type': 'application/json'\n    };\n    data = JSON.stringify(data);\n  }\n\n  ;\n  var method = id === 'new' ? 'POST' : 'PUT';\n  if (id !== 'new') api = getApiById(api, id);\n  console.log(\"DATA SENT:\", data);\n  return _defineProperty({}, RSAA, {\n    endpoint: api,\n    method: method,\n    headers: withAuth(headers),\n    body: data,\n    types: [{\n      type: actions.DATA_LOADER_UPLOAD_REQUEST,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_SUCCESS,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_UPLOAD_FAILURE,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }]\n  });\n};\nexport var deleteDetailUpdateParent = function deleteDetailUpdateParent(api, resource, id, hashSent) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress(api + id + \"/\"),\n    method: 'DELETE',\n    headers: withAuth(),\n    types: [{\n      type: actions.DATA_LOADER_DELETE_REQUEST,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_DELETE_SUCCESS,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_FAILURE,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }]\n  });\n};\nexport var mergeDetailUpdateDetail = function mergeDetailUpdateDetail(api, resource, id, alias_id, hashSent) {\n  var params = {};\n  params.alias = alias_id;\n  return _defineProperty({}, RSAA, {\n    endpoint: getApiById(api + \":id/merge/\", id, params),\n    method: 'GET',\n    headers: withAuth(),\n    types: [{\n      type: actions.DATA_LOADER_DETAIL_UPDATE,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_SUCCESS,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }, {\n      type: actions.DATA_LOADER_DETAIL_FAILURE,\n      meta: {\n        resource: resource,\n        id: id,\n        hash: hashSent\n      }\n    }]\n  });\n};\nexport var searchComponent = function searchComponent(resource, query) {\n  return {\n    type: actions.SEARCH_COMPONENT,\n    resource: resource,\n    query: query\n  };\n};","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/actions/dataLoader.js"],"names":["RSAA","getFullAPIAddress","actions","getApiById","getDataLoaderList","api","resource","params","url","console","log","endpoint","method","headers","withAuth","types","type","DATA_LOADER_LIST_REQUEST","meta","query","DATA_LOADER_LIST_SUCCESS","DATA_LOADER_LIST_FAILURE","updateDataLoaderList","DATA_LOADER_LIST_UPDATE_REQUEST","getDataLoaderDetail","id","update","updateRequest","DATA_LOADER_DETAIL_UPDATE","DATA_LOADER_DETAIL_REQUEST","DATA_LOADER_DETAIL_SUCCESS","DATA_LOADER_DETAIL_FAILURE","updateDataLoaderDetail","data","hashSent","undefined","FormData","JSON","stringify","body","DATA_LOADER_UPLOAD_REQUEST","hash","DATA_LOADER_UPLOAD_FAILURE","deleteDetailUpdateParent","DATA_LOADER_DELETE_REQUEST","DATA_LOADER_DELETE_SUCCESS","mergeDetailUpdateDetail","alias_id","alias","searchComponent","SEARCH_COMPONENT"],"mappings":"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","sourcesContent":["import { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api'\nimport * as actions from './actions';\nimport {getApiById} from \"../utils/api\";\n\n\nexport const getDataLoaderList = (api, resource, params) => {\n    const url = getFullAPIAddress(api, params);\n\n    console.log(\"QQQ5\", params)\n    return {\n        [RSAA]: {\n            endpoint: url ,\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                    type: actions.DATA_LOADER_LIST_REQUEST,\n                    meta: { resource: resource, query: params.query }\n                },\n            {\n                type: actions.DATA_LOADER_LIST_SUCCESS,\n                meta: { resource: resource, query: params.query }\n            },\n            {\n                type: actions.DATA_LOADER_LIST_FAILURE,\n                meta: { resource: resource, query: params.query }\n            }]\n    }\n    }\n};\n\nexport const updateDataLoaderList = (api, resource, params) => {\n    return {\n        [RSAA]: {\n            endpoint: getFullAPIAddress(api, params),\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                type: actions.DATA_LOADER_LIST_UPDATE_REQUEST,\n                meta: { resource: resource, query: params.query }\n            },\n                {\n                    type: actions.DATA_LOADER_LIST_SUCCESS,\n                    meta: { resource: resource, query: params.query }\n                },\n                {\n                    type: actions.DATA_LOADER_LIST_FAILURE,\n                    meta: { resource: resource, query: params.query }\n                }]\n        }\n    }\n};\n\nexport const getDataLoaderDetail = (api, resource, id, update, params) => {\n\n    //let add_params = (params == undefined) ? \"/\" : \"/\" + params;\n\n    const updateRequest = (update) ? actions.DATA_LOADER_DETAIL_UPDATE : actions.DATA_LOADER_DETAIL_REQUEST;\n\n    //console.log(\"ADD\", add_params)\n    return {\n        [RSAA]: {\n            endpoint: getApiById(api, id, params), // add_params),\n            method: 'GET',\n            headers: withAuth({ 'Content-Type': 'application/json' }),\n            types: [{\n                        type: updateRequest,\n                        meta: { resource: resource, id: id, query: params.query },\n\n                    },\n                    {\n                        type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                        meta: { resource: resource, id: id, query: params.query }\n                    },\n                    {\n                        type: actions.DATA_LOADER_DETAIL_FAILURE,\n                        meta: { resource: resource, id: id, query: params.query }\n                    }]\n        }\n}};\n\nexport const updateDataLoaderDetail = (api, resource, id, data, hashSent) => {\n\n    let headers = { 'Content-Type': 'application/x-www-form-urlencoded' }\n    if (hashSent === undefined) hashSent = 0;\n\n    // If data is not formData we change Content-Type and JSONify our data\n    if (!(data instanceof FormData)) {\n        headers = { 'Content-Type': 'application/json' }\n        data = JSON.stringify(data);\n    };\n\n    const method = (id === 'new') ? 'POST': 'PUT';\n    if (id !== 'new') api = getApiById(api, id);\n\n    console.log(\"DATA SENT:\", data)\n\n    return {\n            [RSAA]: {\n            endpoint: api,\n                method: method,\n                headers: withAuth(headers),\n                body: data,\n                types: [{\n                    type: actions.DATA_LOADER_UPLOAD_REQUEST,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_UPLOAD_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\nexport const deleteDetailUpdateParent = (api, resource, id, hashSent) => {\n\n    return {\n            [RSAA]: {\n            endpoint: getFullAPIAddress(api + id + \"/\"),\n                method: 'DELETE',\n                headers: withAuth(),\n                types: [{\n                    type: actions.DATA_LOADER_DELETE_REQUEST,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DELETE_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\n\nexport const mergeDetailUpdateDetail = (api, resource, id, alias_id, hashSent) => {\n\n    const params={};\n    params.alias = alias_id;\n\n    return {\n            [RSAA]: {\n                endpoint: getApiById(api + \":id/merge/\", id, params),\n                method: 'GET',\n                headers: withAuth(),\n                types: [{\n                    type: actions.DATA_LOADER_DETAIL_UPDATE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_SUCCESS,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                },\n                {\n                    type: actions.DATA_LOADER_DETAIL_FAILURE,\n                    meta: { resource: resource, id: id, hash: hashSent }\n                }]\n          }\n    }\n};\n\nexport const searchComponent = (resource, query) => (\n    {\n        type: actions.SEARCH_COMPONENT,\n        resource: resource,\n        query: query\n    }\n)\n"]},"metadata":{},"sourceType":"module"}