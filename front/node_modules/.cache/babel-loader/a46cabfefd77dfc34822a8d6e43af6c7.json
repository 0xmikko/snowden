{"ast":null,"code":"import _defineProperty from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api';\nimport * as actions from './actions';\nexport var login = function login(username, password) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress('/auth/token/obtain/'),\n    method: 'POST',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n  });\n};\nexport var oauthAuthenticate = function oauthAuthenticate(provider, code) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress('/auth/google/complete/'),\n    method: 'POST',\n    body: JSON.stringify({\n      provider: provider,\n      code: code\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n  });\n};\nexport var signup = function signup(email, password) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress('/auth/signup/'),\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    types: [actions.SIGNUP_REQUEST, actions.SIGNUP_SUCCESS, actions.SIGNUP_FAILURE]\n  });\n};\nexport var refreshAccessToken = function refreshAccessToken(token) {\n  return _defineProperty({}, RSAA, {\n    endpoint: getFullAPIAddress('/auth/token/refresh/'),\n    method: 'POST',\n    body: JSON.stringify({\n      refresh: token\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    types: [actions.TOKEN_REQUEST, actions.TOKEN_RECEIVED, actions.TOKEN_FAILURE]\n  });\n};\nexport var logout = function logout() {\n  return {\n    type: actions.LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/actions/auth.js"],"names":["RSAA","getFullAPIAddress","actions","login","username","password","endpoint","method","body","JSON","stringify","headers","types","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","oauthAuthenticate","provider","code","signup","email","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","refreshAccessToken","token","refresh","TOKEN_REQUEST","TOKEN_RECEIVED","TOKEN_FAILURE","logout","type","LOGOUT"],"mappings":";AAAA,SAASA,IAAT,QAAqB,sBAArB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,QAAX;AAAA,6BAChBL,IADgB,EACT;AACJM,IAAAA,QAAQ,EAAEL,iBAAiB,CAAC,qBAAD,CADvB;AAEJM,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,QAAQ,EAARA;AAAX,KAAf,CAHF;AAIJM,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJL;AAKJC,IAAAA,KAAK,EAAE,CAACV,OAAO,CAACW,aAAT,EAAwBX,OAAO,CAACY,aAAhC,EAA+CZ,OAAO,CAACa,aAAvD;AALH,GADS;AAAA,CAAd;AAWP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,IAAX;AAAA,6BAC5BlB,IAD4B,EACrB;AACJM,IAAAA,QAAQ,EAAEL,iBAAiB,CAAE,wBAAF,CADvB;AAEJM,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACO,MAAAA,QAAQ,EAAEA,QAAX;AAAqBC,MAAAA,IAAI,EAAEA;AAA3B,KAAf,CAHF;AAIJP,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAJL;AAKJC,IAAAA,KAAK,EAAE,CAACV,OAAO,CAACW,aAAT,EAAwBX,OAAO,CAACY,aAAhC,EAA+CZ,OAAO,CAACa,aAAvD;AALH,GADqB;AAAA,CAA1B;AAWP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQf,QAAR;AAAA,6BACjBL,IADiB,EACV;AACJM,IAAAA,QAAQ,EAAEL,iBAAiB,CAAE,eAAF,CADvB;AAEJM,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACU,MAAAA,KAAK,EAALA,KAAD;AAAQf,MAAAA,QAAQ,EAARA;AAAR,KAAf,CAHF;AAIJM,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAJL;AAKJC,IAAAA,KAAK,EAAE,CACHV,OAAO,CAACmB,cADL,EACqBnB,OAAO,CAACoB,cAD7B,EAC6CpB,OAAO,CAACqB,cADrD;AALH,GADU;AAAA,CAAf;AAaP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD;AAAA,6BAC7BzB,IAD6B,EACtB;AACJM,IAAAA,QAAQ,EAAEL,iBAAiB,CAAE,sBAAF,CADvB;AAEJM,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACgB,MAAAA,OAAO,EAAED;AAAV,KAAf,CAHF;AAIJd,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAJL;AAKJC,IAAAA,KAAK,EAAE,CACLV,OAAO,CAACyB,aADH,EACkBzB,OAAO,CAAC0B,cAD1B,EAC0C1B,OAAO,CAAC2B,aADlD;AALH,GADsB;AAAA,CAA3B;AAaP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AACzBC,IAAAA,IAAI,EAAE7B,OAAO,CAAC8B;AADW,GAAP;AAAA,CAAf","sourcesContent":["import { RSAA } from 'redux-api-middleware';\nimport { getFullAPIAddress } from '../utils/api'\nimport * as actions from './actions'\n\n\nexport const login = (username, password) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress('/auth/token/obtain/'),\n        method: 'POST',\n        body: JSON.stringify({username, password}),\n        headers: {'Content-Type': 'application/json'},\n        types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n    }\n});\n\n\nexport const oauthAuthenticate = (provider, code) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/google/complete/'),\n        method: 'POST',\n        body: JSON.stringify({provider: provider, code: code}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [actions.LOGIN_REQUEST, actions.LOGIN_SUCCESS, actions.LOGIN_FAILURE]\n    }\n});\n\n\nexport const signup = (email, password) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/signup/' ),\n        method: 'POST',\n        body: JSON.stringify({email, password}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [\n            actions.SIGNUP_REQUEST, actions.SIGNUP_SUCCESS, actions.SIGNUP_FAILURE\n        ]\n      }\n});\n\n\nexport const refreshAccessToken = (token) => ({\n    [RSAA]: {\n        endpoint: getFullAPIAddress( '/auth/token/refresh/' ),\n        method: 'POST',\n        body: JSON.stringify({refresh: token}),\n        headers: { 'Content-Type': 'application/json' },\n        types: [\n          actions.TOKEN_REQUEST, actions.TOKEN_RECEIVED, actions.TOKEN_FAILURE\n        ]\n    }\n});\n\n\nexport const logout = () => ({\n    type: actions.LOGOUT\n   \n});\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}