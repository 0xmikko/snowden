{"ast":null,"code":"import _objectSpread from \"/Users/mikhail/Coding/snowden/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions';\nvar initialState = {\n  forms: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var updateForms = state.forms;\n  console.log(\"STATE\", state);\n\n  switch (action.type) {\n    case actions.FORMS_SHOW:\n      updateForms[action.formId] = {\n        show: true,\n        data: action.data\n      };\n      return updateState(state, _objectSpread({}, state, {\n        forms: updateState(state.forms, updateForms)\n      }));\n\n    case actions.FORMS_HIDE:\n      var data = state.forms['formId'] ? state.forms['formId'].data : undefined;\n      updateForms[action.formId] = {\n        show: false,\n        data: data\n      };\n      return updateState(state, _objectSpread({}, state, {\n        forms: updateState(state.forms, updateForms)\n      }));\n\n    default:\n      return state;\n  }\n});\nexport var getShowForms = function getShowForms(state) {\n  return state.forms;\n};","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/reducers/forms.js"],"names":["updateState","actions","initialState","forms","state","action","updateForms","console","log","type","FORMS_SHOW","formId","show","data","FORMS_HIDE","undefined","getShowForms"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAKA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AAE7C,MAAIC,WAAW,GAAGF,KAAK,CAACD,KAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;;AAEA,UAAQC,MAAM,CAACI,IAAf;AAEI,SAAKR,OAAO,CAACS,UAAb;AAGIJ,MAAAA,WAAW,CAACD,MAAM,CAACM,MAAR,CAAX,GAA6B;AACzBC,QAAAA,IAAI,EAAE,IADmB;AAEzBC,QAAAA,IAAI,EAAER,MAAM,CAACQ;AAFY,OAA7B;AAKA,aAAOb,WAAW,CAACI,KAAD,oBACbA,KADa;AAEhBD,QAAAA,KAAK,EAAEH,WAAW,CAACI,KAAK,CAACD,KAAP,EAAcG,WAAd;AAFF,SAAlB;;AAKJ,SAAKL,OAAO,CAACa,UAAb;AAEI,UAAMD,IAAI,GAAIT,KAAK,CAACD,KAAN,CAAY,QAAZ,CAAD,GAA0BC,KAAK,CAACD,KAAN,CAAY,QAAZ,EAAsBU,IAAhD,GAAsDE,SAAnE;AAEAT,MAAAA,WAAW,CAACD,MAAM,CAACM,MAAR,CAAX,GAA6B;AACzBC,QAAAA,IAAI,EAAE,KADmB;AAEzBC,QAAAA,IAAI,EAAEA;AAFmB,OAA7B;AAKA,aAAOb,WAAW,CAACI,KAAD,oBACbA,KADa;AAEhBD,QAAAA,KAAK,EAAEH,WAAW,CAACI,KAAK,CAACD,KAAP,EAAcG,WAAd;AAFF,SAAlB;;AAMJ;AACE,aAAOF,KAAP;AA/BN;AAkCD,CAvCD;AAyCA,OAAO,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD;AAAA,SAAYA,KAAK,CAACD,KAAlB;AAAA,CAArB","sourcesContent":["import { updateState } from \"../utils/updateState\";\nimport * as actions from '../actions/actions'\n\n\nconst initialState = {\n  forms: {},\n};\n\n\nexport default (state=initialState, action) => {\n\n  let updateForms = state.forms;\n  console.log(\"STATE\", state);\n\n  switch (action.type) {\n\n      case actions.FORMS_SHOW:\n\n\n          updateForms[action.formId] = {\n              show: true,\n              data: action.data\n          };\n\n          return updateState(state, {\n            ...state,\n            forms: updateState(state.forms, updateForms)\n          });\n\n      case actions.FORMS_HIDE:\n\n          const data = (state.forms['formId']) ? state.forms['formId'].data: undefined;\n\n          updateForms[action.formId] = {\n              show: false,\n              data: data\n          };\n\n          return updateState(state, {\n            ...state,\n            forms: updateState(state.forms, updateForms)\n          });\n\n\n      default:\n        return state\n\n  }\n}\n\nexport const getShowForms = (state) => (state.forms);\n"]},"metadata":{},"sourceType":"module"}