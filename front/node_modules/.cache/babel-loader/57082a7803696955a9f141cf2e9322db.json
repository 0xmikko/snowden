{"ast":null,"code":"import storage from 'redux-persist/es/storage';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { createFilter } from 'redux-persist-transform-filter';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport apiMiddleware from './middleware';\nimport rootReducer from './reducers';\nexport default (function (history) {\n  var persistedFilter = createFilter('auth', ['access', 'refresh']); // Redux DevTools\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var reducer = persistReducer({\n    key: 'polls',\n    storage: storage,\n    whitelist: ['auth'],\n    transforms: [persistedFilter]\n  }, rootReducer(history));\n  var store = createStore(reducer, {}, composeEnhancers(applyMiddleware(apiMiddleware, routerMiddleware(history), thunk)));\n  persistStore(store);\n  return store;\n});","map":{"version":3,"sources":["/Users/mikhail/Coding/snowden/front/src/store.js"],"names":["storage","applyMiddleware","createStore","compose","createFilter","persistReducer","persistStore","routerMiddleware","thunk","apiMiddleware","rootReducer","history","persistedFilter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","key","whitelist","transforms","store"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA+B,gCAA/B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAGA,gBAAe,UAACC,OAAD,EAAa;AACxB,MAAMC,eAAe,GAAGR,YAAY,CAC5B,MAD4B,EACpB,CAAC,QAAD,EAAW,SAAX,CADoB,CAApC,CADwB,CAKxB;;AACA,MAAMS,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AAGA,MAAMa,OAAO,GAAGX,cAAc,CAC9B;AACEY,IAAAA,GAAG,EAAE,OADP;AAEEjB,IAAAA,OAAO,EAAEA,OAFX;AAGEkB,IAAAA,SAAS,EAAE,CAAC,MAAD,CAHb;AAIEC,IAAAA,UAAU,EAAE,CAAEP,eAAF;AAJd,GAD8B,EAO9BF,WAAW,CAACC,OAAD,CAPmB,CAA9B;AAUA,MAAMS,KAAK,GAAGlB,WAAW,CACzBc,OADyB,EAEzB,EAFyB,EAGzBH,gBAAgB,CACZZ,eAAe,CACXQ,aADW,EAEXF,gBAAgB,CAACI,OAAD,CAFL,EAGXH,KAHW,CADH,CAHS,CAAzB;AAWAF,EAAAA,YAAY,CAACc,KAAD,CAAZ;AAEA,SAAOA,KAAP;AACH,CAjCD","sourcesContent":["import storage from 'redux-persist/es/storage'\nimport { applyMiddleware, createStore, compose  } from 'redux'\nimport { createFilter   } from 'redux-persist-transform-filter';\nimport { persistReducer, persistStore } from 'redux-persist'\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\n\nimport apiMiddleware from './middleware';\nimport rootReducer from './reducers'\n\n\nexport default (history) => {\n    const persistedFilter = createFilter(\n            'auth', ['access', 'refresh']\n            );\n\n    // Redux DevTools\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n    const reducer = persistReducer(\n    {\n      key: 'polls',\n      storage: storage,\n      whitelist: ['auth'],\n      transforms: [ persistedFilter]\n    },\n    rootReducer(history)\n    )\n\n    const store = createStore(\n    reducer,\n    {},\n    composeEnhancers(\n        applyMiddleware(\n            apiMiddleware,\n            routerMiddleware(history),\n            thunk\n        )\n    ));\n\n    persistStore(store)\n\n    return store\n}"]},"metadata":{},"sourceType":"module"}